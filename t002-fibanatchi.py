# -----------------------------------------------------------------------------
# Task 002
print('''
    Задача 002:
    ===========
Каждый следующий элемент ряда Фибоначчи получается при сложении двух
предыдущих. Начиная с 1 и 2, первые 10 элементов будут:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
\x1b[33m
Найдите сумму всех четных элементов ряда Фибоначчи,
которые не превышают четыре миллиона.
\x1b[0m
''')


# Способ 1. Механический. Перебор. пока Единственный


def fib_sum(u1, u2, summ, limit):
    """
    Рекурсивное тело функции, считает сумму положительных
    чисел Фибаначи, которые меньше указанного предела
    """
    # следующее число - сумма 2х предыдущих
    _u = u1 + u2
    # если больше лимита - закончил, выхожу
    if _u < limit:
        # если чётное, нужно прибавить к общей сумме
        if _u % 2 == 0:
            fib_sum(u2, _u, (summ + _u), limit)
        # иначе сумму не менять
        else:
            fib_sum(u2, _u, summ, limit)
    else:
        return summ


x = 4000000
# рекурсивно
result = fib_sum(1, 2, 2, x)
print("{:,}".format(result))

# строю прогрессию
# while fib_list[len(fib_list) - 1] < x:
#     fib_next = fib_list[len(fib_list) - 2] + fib_list[len(fib_list) - 1]
#     if fib_next > x:
#         print('следующий член: \x1b[35m{:,}\x1b[0m. ' \
#               'Но он больше заданной области:\x1b[35m {:,}\x1b[0m'.format(fib_next, x))
#         break
#     fib_list.append(fib_next)
# print(fib_list)
# >>> [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,
#     1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025,
#     121393, 196418, 317811, 514229, 832040, 1346269,
#     2178309, 3524578]
